"""
–î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –º–æ–¥—É–ª–µ–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
"""

import os
import sys
import importlib.util


def check_file_exists(filepath):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞"""
    return os.path.exists(filepath)


def check_import(module_path):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª—è"""
    try:
        spec = importlib.util.spec_from_file_location("test_module", module_path)
        if spec is None:
            return False, "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—é –º–æ–¥—É–ª—è"

        module = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(module)
        return True, "OK"
    except Exception as e:
        return False, str(e)


print("=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ú–û–î–£–õ–Ø –ê–°–°–ò–°–¢–ï–ù–¢–ê ===\n")

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–æ–≤:")
files_to_check = [
    ("handlers/assistant.py", "–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"),
    ("keyboards/assistant.py", "–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"),
    ("states/assistant.py", "–°–æ—Å—Ç–æ—è–Ω–∏—è FSM"),
    ("utils/openai_api.py", "API –¥–ª—è OpenAI"),
    ("database/assistant_db.py", "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"),
]

missing_files = []
for filepath, description in files_to_check:
    exists = check_file_exists(filepath)
    status = "‚úÖ" if exists else "‚ùå"
    print(f"{status} {filepath} - {description}")
    if not exists:
        missing_files.append(filepath)

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤:")
if check_file_exists("handlers/assistant.py"):
    success, error = check_import("handlers/assistant.py")
    if success:
        print("‚úÖ handlers/assistant.py –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è —É—Å–ø–µ—à–Ω–æ")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ handlers/assistant.py: {error}")

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ handlers/menu.py
print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –≤ handlers/menu.py:")
if check_file_exists("handlers/menu.py"):
    with open("handlers/menu.py", "r", encoding="utf-8") as f:
        content = f.read()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
    if '"ü§ñ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç"' in content or "'ü§ñ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç'" in content:
        print("‚úÖ –ö–Ω–æ–ø–∫–∞ 'ü§ñ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç' –Ω–∞–π–¥–µ–Ω–∞ –≤ menu.py")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        if "handle_assistant" in content:
            print("‚úÖ –§—É–Ω–∫—Ü–∏—è handle_assistant –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("‚ùå –§—É–Ω–∫—Ü–∏—è handle_assistant –ù–ï –Ω–∞–π–¥–µ–Ω–∞")
    else:
        print("‚ùå –ö–Ω–æ–ø–∫–∞ 'ü§ñ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç' –ù–ï –Ω–∞–π–¥–µ–Ω–∞ –≤ menu.py")

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–æ—É—Ç–µ—Ä–∞ –≤ main.py
print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ main.py:")
if check_file_exists("main.py"):
    with open("main.py", "r", encoding="utf-8") as f:
        content = f.read()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç
    if "from handlers import" in content and "assistant" in content:
        print("‚úÖ –ú–æ–¥—É–ª—å assistant –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –≤ main.py")
    else:
        print("‚ùå –ú–æ–¥—É–ª—å assistant –ù–ï –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –≤ main.py")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Ä–æ—É—Ç–µ—Ä–∞
    if "assistant.router" in content:
        print("‚úÖ –†–æ—É—Ç–µ—Ä assistant.router —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è")
    else:
        print("‚ùå –†–æ—É—Ç–µ—Ä assistant.router –ù–ï —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è")

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã handlers/assistant.py
print("\n5. –ê–Ω–∞–ª–∏–∑ handlers/assistant.py:")
if check_file_exists("handlers/assistant.py"):
    with open("handlers/assistant.py", "r", encoding="utf-8") as f:
        content = f.read()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–æ—É—Ç–µ—Ä–∞
    if "router = Router()" in content:
        print("‚úÖ –†–æ—É—Ç–µ—Ä —Å–æ–∑–¥–∞–Ω")
    else:
        print("‚ùå –†–æ—É—Ç–µ—Ä –ù–ï —Å–æ–∑–¥–∞–Ω")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    handlers = []
    if '@router.message(F.text == "ü§ñ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç")' in content:
        handlers.append("–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é")
    if "handle_assistant_menu" in content:
        handlers.append("–§—É–Ω–∫—Ü–∏—è handle_assistant_menu")
    if "@router.callback_query" in content:
        handlers.append("Callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏")

    if handlers:
        print("‚úÖ –ù–∞–π–¥–µ–Ω—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏:")
        for h in handlers:
            print(f"   - {h}")
    else:
        print("‚ùå –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ù–ï –Ω–∞–π–¥–µ–Ω—ã")

# 6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
print("\n=== –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò ===")
if missing_files:
    print("\n‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã:")
    for f in missing_files:
        print(f"   - {f}")
    print("\n–°–æ–∑–¥–∞–π—Ç–µ —ç—Ç–∏ —Ñ–∞–π–ª—ã –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –¥–∏–∞–ª–æ–≥–æ–≤.")

print("\nüí° –î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã:")
print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã")
print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤ handlers/menu.py –µ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏")
print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤ main.py –ø–æ–¥–∫–ª—é—á–µ–Ω —Ä–æ—É—Ç–µ—Ä –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞")
print("4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ aiogram
print("\n=== –í–ï–†–°–ò–ò –ë–ò–ë–õ–ò–û–¢–ï–ö ===")
try:
    import aiogram

    print(f"aiogram: {aiogram.__version__}")
except:
    print("aiogram: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

try:
    import openai

    print(f"openai: {openai.__version__}")
except:
    print("openai: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)")
