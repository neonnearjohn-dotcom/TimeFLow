"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
"""
import os

def check_main_py():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç main.py"""
    print("üìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ main.py...\n")
    
    with open('main.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç
    if 'from handlers import' in content and 'assistant' in content:
        if '# , assistant' in content or '#, assistant' in content:
            print("‚ùå –ú–æ–¥—É–ª—å assistant –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω –≤ –∏–º–ø–æ—Ä—Ç–µ!")
            return False
        else:
            print("‚úÖ –ò–º–ø–æ—Ä—Ç assistant –Ω–∞–π–¥–µ–Ω")
    else:
        print("‚ùå –ò–º–ø–æ—Ä—Ç assistant –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Ä–æ—É—Ç–µ—Ä–∞
    if 'dp.include_router(assistant.router)' in content:
        if '# dp.include_router(assistant.router)' in content:
            print("‚ùå –†–æ—É—Ç–µ—Ä assistant –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω!")
            return False
        else:
            print("‚úÖ –†–æ—É—Ç–µ—Ä assistant –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")
    else:
        print("‚ùå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞ assistant –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return False
    
    return True


def check_menu_handler():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤ menu.py"""
    print("\nüìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ handlers/menu.py...\n")
    
    if not os.path.exists('handlers/menu.py'):
        print("‚ùå –§–∞–π–ª handlers/menu.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    with open('handlers/menu.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    if 'ü§ñ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç' in content:
        print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è 'ü§ñ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç' –Ω–∞–π–¥–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ª–∏ assistant.handle_assistant_menu
        if 'assistant.handle_assistant_menu' in content:
            print("‚úÖ –í—ã–∑–æ–≤ assistant.handle_assistant_menu –Ω–∞–π–¥–µ–Ω")
        else:
            print("‚ùå –í—ã–∑–æ–≤ assistant.handle_assistant_menu –ù–ï –Ω–∞–π–¥–µ–Ω!")
            return False
    else:
        print("‚ùå –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è 'ü§ñ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç' –ù–ï –Ω–∞–π–¥–µ–Ω!")
        return False
    
    return True


def check_keyboard():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"""
    print("\nüìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ keyboards/main_menu.py...\n")
    
    with open('keyboards/main_menu.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    if 'ü§ñ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç' in content:
        print("‚úÖ –ö–Ω–æ–ø–∫–∞ 'ü§ñ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç' –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ")
    else:
        print("‚ùå –ö–Ω–æ–ø–∫–∞ 'ü§ñ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç' –ù–ï –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ!")
        return False
    
    return True


def fix_menu_handler():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é"""
    print("\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ handlers/menu.py...")
    
    correct_content = '''"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
"""
from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import StateFilter
from aiogram.fsm.state import default_state
from aiogram.fsm.context import FSMContext

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –º–µ–Ω—é
router = Router()


@router.message(F.text == "üìä –¢—Ä–µ–∫–µ—Ä—ã", StateFilter(default_state))
async def handle_trackers(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –¢—Ä–µ–∫–µ—Ä—ã"""
    from handlers import trackers
    await trackers.handle_trackers_menu(message)


@router.message(F.text == "‚úÖ –ß–µ–∫-–ª–∏—Å—Ç", StateFilter(default_state))
async def handle_checklist(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ß–µ–∫-–ª–∏—Å—Ç"""
    from handlers import checklist
    await checklist.handle_checklist_menu(message)


@router.message(F.text == "üéØ –§–æ–∫—É—Å", StateFilter(default_state))
async def handle_focus(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –§–æ–∫—É—Å"""
    from handlers import focus
    await focus.handle_focus_menu(message)


@router.message(F.text == "ü§ñ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç", StateFilter(default_state))
async def handle_assistant(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç"""
    from handlers import assistant
    await assistant.handle_assistant_menu(message, state)


@router.message(F.text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å", StateFilter(default_state))
async def handle_profile(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ü—Ä–æ—Ñ–∏–ª—å"""
    from handlers import profile
    await profile.handle_profile_menu(message)


@router.message(F.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", StateFilter(default_state))
async def handle_settings(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ù–∞—Å—Ç—Ä–æ–π–∫–∏"""
    await message.answer(
        "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>\\n\\n"
        "üöß –≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\\n\\n"
        "–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è:\\n"
        "‚Ä¢ üîî –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\\n"
        "‚Ä¢ üé® –í—ã–±–æ—Ä —Ç–µ–º—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è\\n"
        "‚Ä¢ üåê –°–º–µ–Ω–∞ —è–∑—ã–∫–∞\\n"
        "‚Ä¢ üìä –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö\\n"
        "‚Ä¢ üîê –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å\\n\\n"
        "–ê –ø–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π –¥—Ä—É–≥–∏–µ —Ä–∞–∑–¥–µ–ª—ã –±–æ—Ç–∞! üòä",
        parse_mode="HTML"
    )
'''
    
    with open('handlers/menu.py', 'w', encoding='utf-8') as f:
        f.write(correct_content)
    
    print("‚úÖ –§–∞–π–ª handlers/menu.py –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")


def fix_main_py():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç main.py"""
    print("\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ main.py...")
    
    with open('main.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ–º assistant
    content = content.replace('# , assistant', ', assistant')
    content = content.replace('#, assistant', ', assistant')
    content = content.replace('# dp.include_router(assistant.router)', 'dp.include_router(assistant.router)')
    
    with open('main.py', 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("‚úÖ main.py –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –º–æ–¥—É–ª—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞\n")
    
    issues = []
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º main.py
    if not check_main_py():
        issues.append("main.py")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º menu.py
    if not check_menu_handler():
        issues.append("menu.py")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    if not check_keyboard():
        issues.append("keyboard")
    
    if issues:
        print(f"\n‚ùå –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤: {', '.join(issues)}")
        
        response = input("\n–ò—Å–ø—Ä–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏? (y/n): ")
        if response.lower() == 'y':
            if "main.py" in issues:
                fix_main_py()
            if "menu.py" in issues:
                fix_menu_handler()
            
            print("\n‚úÖ –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ! –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞.")
    else:
        print("\n‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
        print("\n–ï—Å–ª–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤—Å–µ –µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏–ª–∏ –ª–∏ –≤—ã –±–æ—Ç–∞ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π")
        print("2. –ù–µ—Ç –ª–∏ –æ—à–∏–±–æ–∫ –≤ –∫–æ–Ω—Å–æ–ª–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ")


if __name__ == "__main__":
    main()